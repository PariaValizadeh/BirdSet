# @package _global_
#package global is neccessary!
defaults:
  - override /datamodule: xenocanto_m.yaml
  - override /module: multiclass.yaml
  - override /module/network: resnet.yaml
  - override /callbacks: default.yaml 
  - override /trainer: single_gpu.yaml
  - override /datamodule/transforms/spectrogram_augmentations: none.yaml
  - override /datamodule/transforms/waveform_augmentations: none.yaml

tags: ["pretrain_xencanto_m", "resnet", "multiclass"]
seed: 2
train: True
test: False

module:
  lr_scheduler:
    _target_: torch.optim.lr_scheduler
  optimizer:
    _target_: torch.optim.Adam
    lr: 1e-4
    weight_decay: 0.01
  network:
    sampling_rate: 32000

trainer:
  min_epochs: 1
  max_epochs: 100

datamodule:
  # dataset:
  #   val_split: 0.1
  #   class_weights_loss: null
  #   class_weights_sampler: null
  # transforms:
  #   preprocessing:
  #     normalize_waveform: instance_normalization

  loaders:
    train:
      batch_size: 64
      num_workers: 16
    valid:
      batch_size: 64
      num_workers: 16
    test:
      batch_size: 6
    # train:
    #   batch_size: 256
    #   shuffle: True
    #   num_workers: 32
    #   drop_last: True
    #   prefetch_factor: 8
    # valid:
    #   batch_size: 64

  # mapper: 
  #   event_limit: 1
  #   biggest_cluster: True
  #   no_call: False
  
callbacks:
  model_checkpoint:
    save_last: True
    every_n_epochs: 5
logger:
  wandb:
    tags: ${tags}
    group: "pretrain"
    mode: online
